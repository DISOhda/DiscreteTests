% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signed-rank.R
\name{signed_rank_test_pv}
\alias{signed_rank_test_pv}
\title{Wilcoxon two-sample signed-rank test}
\usage{
signed_rank_test_pv(
  x,
  y,
  shift = 0,
  alternative = "two.sided",
  exact = NULL,
  correct = TRUE,
  digits_rank = Inf,
  simple_output = FALSE
)
}
\arguments{
\item{x, y}{numerical vectors forming the samples to be tested or
lists of numerical vectors for multiple samples.}

\item{shift}{numerical vector of hypothesised differences(s).}

\item{alternative}{character vector that indicates the alternative hypotheses; each value must be one of \code{"two.sided"} (the default), \code{"less"} or \code{"greater"}.}

\item{exact}{logical value that indicates whether p-values are to be calculated by exact computation (\code{TRUE}; the default) or by a continuous approximation (\code{FALSE}).}

\item{correct}{logical value that indicates if a continuity correction is to be applied (\code{TRUE}; the default) or not (\code{FALSE}). Ignored, if \code{exact = TRUE}.}

\item{digits_rank, }{single number giving the significant digits used to compute ranks for the test statistics.}

\item{simple_output, }{logical value that indicates whether an R6 class object, including the tests' parameters and support sets, i.e. all observable p-values under each null hypothesis, is to be returned (see below).}
}
\value{
If \code{simple.output = TRUE}, a vector of computed p-values is returned.
Otherwise, the output is a \code{\link{DiscreteTestResults}} R6 class object, which
also includes the p-value supports and testing parameters. These have to be
accessed by public methods, e.g. \verb{$get_pvalues()}.
}
\description{
\code{signed_rank_test_pv()} performs an exact or approximate Wilcoxon signed-rank
test about the differences between two paired groups when the data is not
necessarily normally distributed. In contrast to \code{\link[stats:wilcox.test]{stats::wilcox.test()}}, it
is vectorised and only calculates \emph{p}-values. Furthermore, it is capable of
returning the discrete \emph{p}-value supports, i.e. all observable \emph{p}-values
under a null hypothesis. Multiple tests can be evaluated simultaneously.
}
\details{
The parameters \code{x}, \code{y}, \code{shift} and \code{alternative} are vectorised. If \code{x} and
\code{y} are lists, they are replicated automatically to have the same lengths. In
case \code{x} or \code{y} are not lists, they are added to new ones, which are then
replicated to the appropriate lengths. This allows multiple hypotheses to be
tested simultaneously.

In the presence of ties or differences of \code{x} and \code{y} that are equal to
\code{shift}, computation of exact \emph{p}-values is not possible. Therefore, \code{exact}
is ignored in these cases and \emph{p}-values of the respective test settings are
calculated by a normal approximation.

By setting \code{exact = NULL}, exact computation is performed if the differences
of both samples in a test setting do not have any ties or zeros and if both
sample sizes are lower than or equal to 200.

If \code{digits_rank = Inf} (the default), \code{\link[base:rank]{rank()}} is used to
compute ranks for the tests statistics instead of
\code{\link[base:rank]{rank}}(\code{\link[base:Round]{signif(., digits_rank)}})
}
\examples{
# Constructing
set.seed(1)
r1 <- rnorm(100)
r2 <- rnorm(100, 1)

# Computation of exact two-sided p-values and their supports
results_ex  <- signed_rank_test_pv(r1, r2)
raw_pvalues <- results_ex$get_pvalues()
pCDFlist    <- results_ex$get_pvalue_supports()

# Computation of normal-approximated one-sided p-values ("less") and their supports
results_ap  <- signed_rank_test_pv(r1, r2, alternative = "less", exact = FALSE)
raw_pvalues <- results_ap$get_pvalues()
pCDFlist    <- results_ap$get_pvalue_supports()

}
\references{
Hollander, M. & Wolfe, D. (1973). \emph{Nonparametric Statistical Methods}. Third
Edition. New York: Wiley. pp. 40-55. \doi{10.1002/9781119196037}
}
\seealso{
\code{\link[stats:wilcox.test]{stats::wilcox.test()}}, \code{\link[=wilcox_single_test_pv]{wilcox_single_test_pv()}},
\code{\link[=mann_whitney_test_pv]{mann_whitney_test_pv()}}
}
